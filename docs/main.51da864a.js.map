{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/JSRuntime.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/get-worker-url.js","src/app/config.ts","src/app/queue.ts","/home/felix/Documents/mandelbrot-web/node_modules/@parcel/scope-hoisting/lib/helpers.js","src/app/main.ts","src/app/io.ts","src/app/throttle.ts"],"names":["mapping","id","resolved","Error","pairs","keys","Object","i","length","$bd72ee1865b930c1fed8ae47f35e91$export$register","JSON","parse","bundleURL","getBundleURLCached","err","matches","stack","match","getBaseURL","getBundleURL","url","replace","getOrigin","$da3a6c17234c5d68d4f1108f53a7bad4$exports","$da3a6c17234c5d68d4f1108f53a7bad4$export$getBaseURL","$da3a6c17234c5d68d4f1108f53a7bad4$export$getOrigin","resolve","dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","push","apply","join","$e5b69ae2ffddc223b376d75aff9c28$exports","fromId","toId","_dirname","$e5b69ae2ffddc223b376d75aff9c28$export$_dirname","_relative","$e5b69ae2ffddc223b376d75aff9c28$export$_relative","$aeb8a3e65af9fcf7d60a0ffa04911b89$exports","$da3a6c17234c5d68d4f1108f53a7bad4$init","$e5b69ae2ffddc223b376d75aff9c28$init","bundleUrl","BEEFY_DEVICE","navigator","hardwareConcurrency","zoom","c","n","zoom_fact","px_ax_len","Math","abs","axis_len_y","px_height","pow","instance","$d2b02acf94161deaf222ca9ee9ea4efb$var$_construct","Config","iter_max","worker_num","task_num","batch_num","$d2b02acf94161deaf222ca9ee9ea4efb$var$_classCallCheck","this","px_width","window","innerWidth","devicePixelRatio","innerHeight","px_num","axis_len_x","QueueR","$d962539039b98196aff447f0037eefe5$var$_classCallCheck","arr","vals","_this$arr","$d962539039b98196aff447f0037eefe5$var$_toConsumableArray","elms","j","floor","random","_ref","Task","top","left","bot","right","bytes","$b7c78d814b33716017b91129fa94c9$exports","relativePath","workerUrl","self","location","origin","URL","createObjectURL","Blob","stringify","$b996ef693cd0ca06f231e1b1df4$exports","$b7c78d814b33716017b91129fa94c9$init","a","__esModule","default","console","log","$aeb8a3e65af9fcf7d60a0ffa04911b89$$interop$default","$d2b02acf94161deaf222ca9ee9ea4efb$export$instance","render_done","callback","func","limit","inThrottle","wasm_has_compiled","WebAssembly","compileStreaming","fetch","canvas","document","querySelector","context","getContext","task_queue","$d962539039b98196aff447f0037eefe5$export$QueueR","workers","render","time","clear","enq","task_len","task_num_x","ceil","task_num_y","tasks","y","x","last_task","$d962539039b98196aff447f0037eefe5$export$create_tasks","shuffle","_step2","_iterator2","$edd366298a16cdadc500efb7e371c1f4$var$_createForOfIteratorHelper","s","done","worker","value","peek","postMessage","deq_n","e","f","width","height","style","concat","addEventListener","ev","deltaY","$d2b02acf94161deaf222ca9ee9ea4efb$export$zoom","arguments","setTimeout","then","mod","_loop","Worker","$b996ef693cd0ca06f231e1b1df4$init","type","_step","_iterator","data","_loop2","task","requestAnimationFrame","putImageData","ImageData","timeEnd","load_workers"],"version":3,"file":"main.51da864a.js.map","sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n};\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path.default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path.default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        assets.push(...getLoaderRuntimes({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        }));\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let bundlesInGroup = bundleGraph.getBundlesInBundleGroup(bundleGroup);\n      let [firstBundle] = bundlesInGroup;\n\n      if (firstBundle.isInline) {\n        assets.push({\n          filePath: _path.default.join(__dirname, `/bundles/${firstBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, firstBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntimes({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let assets = []; // Sort so the bundles containing the entry asset appear last\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  }\n\n  let loaders = getLoaders(bundle.env); // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = loaders ? externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows.default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean) : [];\n\n  if (loaderModules.length > 0) {\n    let loaders = loaderModules.join(', ');\n\n    if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n      loaders = `Promise.all([${loaders}])`;\n\n      if (bundle.env.outputFormat !== 'global') {\n        loaders += `.then(r => r[r.length - 1])`;\n      }\n    } else {\n      loaders = `(${loaders})`;\n    }\n\n    if (bundle.env.outputFormat === 'global') {\n      loaders += `.then(() => parcelRequire('${bundleGroup.entryAssetId}')${// In global output with scope hoisting, functions return exports are\n      // always returned. Otherwise, the exports are returned.\n      bundle.env.scopeHoist ? '()' : ''})`;\n    }\n\n    assets.push({\n      filePath: __filename,\n      code: `module.exports = ${loaders};`,\n      dependency\n    });\n  }\n\n  return assets;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  return bundle.isEntry || bundleGraph.getParentBundles(bundle).some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[getPublicBundleId(bundle)] = (0, _nullthrows.default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(getPublicBundleId(from))}, ${JSON.stringify(getPublicBundleId(to))})`;\n  }\n\n  return JSON.stringify((0, _utils.relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}\n\nfunction getPublicBundleId(bundle) {\n  return bundle.id.slice(-16);\n}","\"use strict\";\n\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","\"use strict\";\n\n/* global self, Blob */\nvar bundleUrl = require('./bundle-url');\n\nmodule.exports = function (relativePath) {\n  var workerUrl = bundleUrl.getBundleURL() + relativePath;\n\n  if (bundleUrl.getOrigin(workerUrl) === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    return URL.createObjectURL(new Blob(['importScripts(' + JSON.stringify(workerUrl) + ');']));\n  }\n};","const BEEFY_DEVICE = navigator.hardwareConcurrency > 4\n// Initial Config\nconst ITER_MAX = 2000\nconst ZOOM_FACT = 1\nconst WORKER_NUM = navigator.hardwareConcurrency * (BEEFY_DEVICE ? 2 : 1)\nconst TASK_NUM = BEEFY_DEVICE ? 48 : 8\nconst BATCH_NUM = 4\nconst AXIS_LEN_Y = 4\n// Constructor args\ntype ConstructorArgs = [number, number, number, number, number, number]\nconst INITIAL_ARGS: ConstructorArgs = [ ITER_MAX, ZOOM_FACT, WORKER_NUM, TASK_NUM, BATCH_NUM, AXIS_LEN_Y ]\n\n// Implementation\nexport class Config {\n\tpublic iter_max: number\n\tpublic zoom_fact: number\n\tpublic px_width: number\n\tpublic px_height: number\n\tpublic px_num: number\n\tpublic px_ax_len: number\n\tpublic axis_len_x: number\n\tpublic axis_len_y: number\n\tpublic worker_num: number\n\tpublic task_num: number\n\tpublic batch_num: number\n\n\tconstructor(\n\t\titer_max: number,\n\t\tzoom_fact: number,\n\t\tworker_num: number,\n\t\ttask_num: number,\n\t\tbatch_num: number,\n\t\taxis_len_y: number\n\t) {\n\t\tthis.iter_max = iter_max\n\t\tthis.zoom_fact = zoom_fact\n\t\tthis.px_width = ~~(window.innerWidth * window.devicePixelRatio)\n\t\tthis.px_height = ~~(window.innerHeight * window.devicePixelRatio)\n\t\tthis.px_num = this.px_width * this.px_height\n\t\tthis.px_ax_len = axis_len_y / this.px_height\n\t\tthis.axis_len_x = axis_len_y * (this.px_width / this.px_height)\n\t\tthis.axis_len_y = axis_len_y\n\t\tthis.worker_num = worker_num\n\t\tthis.task_num = task_num\n\t\tthis.batch_num = batch_num\n\t}\n}\n\nexport function zoom(c: Config, n: number) {\n\tc.zoom_fact = n\n\tc.px_ax_len = Math.abs(c.axis_len_y / c.px_height / 1.16 ** (c.zoom_fact - 1))\n}\n\nexport function move(c: Config, x: number, y: number) {}\n\nexport const instance = new Config(...INITIAL_ARGS)\n","import { instance as config } from './config'\n\ntype QueueItem = null | {\n\tnext: QueueItem\n\tval: Task\n}\n\nexport class QueueR {\n\tprivate arr: Task[]\n\tconstructor() {\n\t\tthis.arr = []\n\t}\n\tpublic enq(vals: Task[]) {\n\t\tif (vals) {\n\t\t\tthis.arr.push(...vals)\n\t\t}\n\t}\n\tpublic deq(): Task {\n\t\tif (this.arr[0]) {\n\t\t\treturn this.arr.shift()\n\t\t}\n\t}\n\tpublic deq_n(n: number): Task[] {\n\t\tconst elms = []\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tif (this.arr[0]) {\n\t\t\t\telms.push(this.arr.shift())\n\t\t\t}\n\t\t}\n\t\treturn elms\n\t}\n\tpublic peek() {\n\t\treturn this.arr[0]\n\t}\n\tpublic clear() {\n\t\tthis.arr.length = 0\n\t}\n\tpublic len() {\n\t\treturn this.arr.length\n\t}\n\tpublic shuffle() {\n\t\tfor (let i = this.arr.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1))\n\t\t\t;[ this.arr[i], this.arr[j] ] = [ this.arr[j], this.arr[i] ]\n\t\t}\n\t}\n}\n\n// export class Task {\n// \tbytes: Uint8ClampedArray\n// \tconstructor (\n// \t\tpublic readonly px_ax_len: number,\n// \t\tpublic readonly top: number,\n// \t\tpublic readonly left: number,\n// \t\tpublic readonly bot: number,\n// \t\tpublic readonly right: number\n// \t) {}\n// }\n\nexport interface Task {\n\treadonly px_ax_len: number\n\treadonly top: number\n\treadonly left: number\n\treadonly bot: number\n\treadonly right: number\n\tbytes: Uint8ClampedArray\n}\n\nexport function Task(px_ax_len: number, top: number, left: number, bot: number, right: number): Task {\n\treturn { px_ax_len, bytes: null, top, left, bot, right }\n}\n\n// CREATE TASKS\nexport function create_tasks(): Task[] {\n\t// top = first pixel y at task_length index\n\t// left = first pixel x at task_length index\n\t// bot = last pixel y before next task\n\t// right = last pixel x before next\n\tconst task_len = Math.floor(config.px_height / config.task_num)\n\tconst task_num_x = Math.ceil(config.px_width / task_len)\n\tconst task_num_y = Math.ceil(config.px_height / task_len)\n\tconst tasks = []\n\n\t// MOST TASKS\n\tfor (let y = 0; y < task_num_y - 1; y++) {\n\t\tfor (let x = 0; x < task_num_x - 1; x++) {\n\t\t\ttasks.push(\n\t\t\t\tTask(\n\t\t\t\t\tconfig.px_ax_len,\n\t\t\t\t\ty * task_len - 1,\n\t\t\t\t\tx * task_len - 1,\n\t\t\t\t\t(y + 1) * task_len - 1,\n\t\t\t\t\t(x + 1) * task_len - 1\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}\n\t// LAST COLUMN EXCEPT LAST TASK\n\tfor (let y = 0; y < task_num_y - 1; y++) {\n\t\ttasks.push(\n\t\t\tTask(\n\t\t\t\tconfig.px_ax_len,\n\t\t\t\ty * task_len - 1,\n\t\t\t\tconfig.px_width - task_len,\n\t\t\t\t(y + 1) * task_len - 1,\n\t\t\t\tconfig.px_width\n\t\t\t)\n\t\t)\n\t}\n\t// LAST ROW EXCEPT LAST TASK\n\tfor (let x = 0; x < task_num_x - 1; x++) {\n\t\ttasks.push(\n\t\t\tTask(\n\t\t\t\tconfig.px_ax_len,\n\t\t\t\tconfig.px_height - task_len,\n\t\t\t\tx * task_len - 1,\n\t\t\t\tconfig.px_height,\n\t\t\t\t(x + 1) * task_len - 1\n\t\t\t)\n\t\t)\n\t}\n\t// LAST TASK\n\tconst last_task = Task(\n\t\tconfig.px_ax_len,\n\t\t(task_num_y - 1) * task_len - 1,\n\t\t(task_num_x - 1) * task_len - 1,\n\t\tconfig.px_height,\n\t\tconfig.px_width\n\t)\n\ttasks.push(last_task)\n\treturn tasks\n}\n\nexport interface TaskMessage {\n\treadonly task: Task\n\treadonly px_len: number\n}\n\n// export class QueueL {\n// \tprivate head: QueueItem\n// \tprivate tail: QueueItem\n// \tconstructor() {\n// \t\tthis.head = null\n// \t\tthis.tail = null\n// \t}\n// \tpublic enq(val: Task) {\n// \t\tif (this.head) {\n// \t\t\tthis.tail.next = { next: null, val }\n// \t\t\tthis.tail = this.tail.next\n// \t\t}\n// \t\telse {\n// \t\t\tthis.head = { next: null, val }\n// \t\t\tthis.tail = this.head\n// \t\t}\n// \t}\n// \tpublic deq() {\n// \t\tif (this.head) {\n// \t\t\tconst deqd = this.head\n// \t\t\tif (this.head === this.tail) {\n// \t\t\t\tthis.head = null\n// \t\t\t\tthis.tail = null\n// \t\t\t}\n// \t\t\telse {\n// \t\t\t\tthis.head = this.head.next\n// \t\t\t}\n// \t\t\treturn deqd.val\n// \t\t}\n// \t}\n// \tpublic peek() {\n// \t\treturn this.head\n// \t}\n// \tpublic clear() {\n// \t\tif (this.head) {\n// \t\t\tthis.head = null\n// \t\t\tthis.tail = null\n// \t\t}\n// \t}\n// }\n",null,"// @ts-ignore\nimport mandelbrot_url from 'url:../mandel/mandel.wasm'\nimport { Config, instance as config } from './config'\nimport { Task, QueueR, create_tasks } from './queue'\nimport { zoom_throttled } from './io'\n\n// DEBUG\nconsole.log(mandelbrot_url)\nconsole.log(config)\n\n// GLOBALS\nconst wasm_has_compiled = WebAssembly.compileStreaming(fetch(mandelbrot_url))\nconst canvas = document.querySelector('canvas')\nconst context = canvas.getContext('2d')\nconst task_queue = new QueueR()\nconst workers: Worker[] = []\nlet render_done: boolean\n// const pixel_data = context.createImageData(config.px_width, config.px_height)\n// const pixel_buffer = new Uint32Array(pixel_data.data.buffer)\n\n// CANVAS INIT\ncanvas.width = config.px_width\ncanvas.height = config.px_height\ncanvas.style.width = `${window.innerWidth}px`\ncanvas.style.height = `${window.innerHeight}px`\n\n// LOAD WORKERS\nfunction load_workers(mod: WebAssembly.Module) {\n\t// create workers\n\tfor (let i = 0; i < config.worker_num; i++) {\n\t\tconst worker = new Worker('./worker.ts', { type: 'module' })\n\n\t\t// WORKER CALLBACK\n\t\tfunction handle_msg(ev) {\n\t\t\tconst tasks: Task[] = ev.data\n\t\t\tfor (const task of tasks) {\n\t\t\t\tif (task.px_ax_len === config.px_ax_len) {\n\t\t\t\t\twindow.requestAnimationFrame(function() {\n\t\t\t\t\t\tcontext.putImageData(\n\t\t\t\t\t\t\tnew ImageData(task.bytes, task.right - task.left, task.bot - task.top),\n\t\t\t\t\t\t\ttask.left,\n\t\t\t\t\t\t\ttask.top\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if task queue is not empty\n\t\t\tif (task_queue.peek()) {\n\t\t\t\tworker.postMessage(task_queue.deq_n(config.batch_num))\n\t\t\t} else {\n\t\t\t\t// set global render_done variable to true\n\t\t\t\tif (!render_done) {\n\t\t\t\t\trender_done = true\n\t\t\t\t\t// DEBUG: end render time stopwatch\n\t\t\t\t\tconsole.timeEnd()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tworker.addEventListener('message', handle_msg)\n\t\t// TODO: remove set_zoom method from config class\n\t\tworker.postMessage([ config, mod ])\n\t\tworkers.push(worker)\n\t}\n}\n\n// RENDER\nfunction px_idx_to_coord() {}\nfunction px_coord_to_idx() {}\n\nfunction render() {\n\t// DEBUG: Measure time for each render\n\tconsole.time()\n\t// set global state calc_done to false\n\trender_done = false\n\t// clear task queue\n\ttask_queue.clear()\n\t// ENQUEUE TASKS\n\ttask_queue.enq(create_tasks())\n\t// SHUFFLE QUEUE\n\ttask_queue.shuffle()\n\t// START QUEUE\n\tfor (const worker of workers) {\n\t\tif (task_queue.peek()) {\n\t\t\tworker.postMessage(task_queue.deq_n(config.batch_num))\n\t\t}\n\t}\n}\n\n// EVENT LISTENERS\nwindow.addEventListener('wheel', zoom_throttled(render))\n\n// MAIN ENTRY POINT\nwasm_has_compiled.then(function(mod) {\n\tload_workers(mod)\n\trender()\n})\n","import throttle from './throttle'\nimport debounce from './debounce'\nimport { instance as config, zoom, move } from './config'\n\nexport function zoom_throttled(callback: Function) {\n    return throttle(function (ev: WheelEvent) {\n        if (ev.deltaY < 0) {\n            // zoom in\n            zoom(config, config.zoom_fact + 1)\n            console.log(`${config.zoom_fact * 100}% Zoom`)\n            callback()\n            // console.log(ev.clientX, ev.clientY)\n        }\n        else {\n            // zoom out\n            if (config.zoom_fact > 1) {\n                zoom(config, config.zoom_fact - 1)\n                console.log(`${config.zoom_fact * 100}% Zoom`)\n                callback()\n            }\n            // console.log(ev.clientX, ev.clientY)\n        }\n    }, 50)\n}\n\n\nexport function debounced_zoom(callback: Function) {\n    return debounce(function (ev: WheelEvent) {\n        if (ev.deltaY < 0) {\n            // zoom in\n            console.log(config.zoom_fact)\n            zoom(config, config.zoom_fact + 1)\n            console.log(config.zoom_fact)\n            callback()\n            console.log(ev.clientX, ev.clientY)\n        }\n        else {\n            // zoom out\n            if (config.zoom_fact > 1) {\n                console.log(config.zoom_fact)\n                zoom(config, config.zoom_fact - 1)\n                console.log(config.zoom_fact)\n                callback()\n            }\n            console.log(ev.clientX, ev.clientY)\n        }\n    },\n        1000,\n        true\n    )\n}","// Throttle.\n\nfunction throttle(func: Function, limit: number) {\n\t// @ts-ignore\n\tlet inThrottle: NodeJS.Timeout | boolean\n\treturn function (...args: any[]) {\n\t\tif (!inThrottle) {\n\t\t\tfunc(...args)\n\t\t\tinThrottle = setTimeout(() => (inThrottle = false), limit)\n\t\t}\n\t}\n}\n\nexport default throttle\n"]}